// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace AutomatedTesting1
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// The First Automated Test
        /// </summary>
        public void FirstTest()
        {
            #region Variable Declarations
            WpfButton uIItem8Button = this.UICalculatorWindow.UIItem8Button;
            WpfButton uIItemButton = this.UICalculatorWindow.UIItemButton;
            WpfButton uIItem5Button = this.UICalculatorWindow.UIItem5Button;
            WpfButton uIItemButton1 = this.UICalculatorWindow.UIItemButton1;
            WpfButton uIItemButton2 = this.UICalculatorWindow.UIItemButton2;
            WpfButton uIItem6Button = this.UICalculatorWindow.UIItem6Button;
            WpfButton uIClearButton = this.UICalculatorWindow.UIClearButton;
            WpfButton uIItem2Button = this.UICalculatorWindow.UIItem2Button;
            WpfButton uIItemButton3 = this.UICalculatorWindow.UIItemButton3;
            WpfButton uIItem3Button = this.UICalculatorWindow.UIItem3Button;
            WpfButton uIItemButton4 = this.UICalculatorWindow.UIItemButton4;
            WinWindow uICalculatorWindow1 = this.UICalculatorWindow1;
            WpfButton uIItemButton5 = this.UICalculatorWindow.UIItemButton5;
            WpfButton uIItem0Button = this.UICalculatorWindow.UIItem0Button;
            WinButton uICerrarButton = this.UICalculatorWindow1.UICerrarButton;
            #endregion

            // Click '8' button
            Mouse.Click(uIItem8Button, new Point(14, 32));

            Playback.Wait(500);
            // Click '+' button
            Mouse.Click(uIItemButton, new Point(27, 25));

            // Click '5' button
            Mouse.Click(uIItem5Button, new Point(21, 25));

            // Click '=' button
            Mouse.Click(uIItemButton1, new Point(36, 34));

            // Click '-' button
            Mouse.Click(uIItemButton2, new Point(44, 23));

            // Click '6' button
            Mouse.Click(uIItem6Button, new Point(23, 30));

            // Click '=' button
            Mouse.Click(uIItemButton1, new Point(22, 34));

            // Click 'Clear' button
            Mouse.Click(uIClearButton, new Point(149, 17));

            // Click '2' button
            Mouse.Click(uIItem2Button, new Point(24, 29));

            // Click '.' button
            Mouse.Click(uIItemButton3, new Point(20, 23));

            // Click '3' button
            Mouse.Click(uIItem3Button, new Point(24, 26));

            Playback.Wait(500);

            // Click '*' button
            Mouse.Click(uIItemButton4, new Point(32, 12));

            // Click '6' button
            Mouse.Click(uIItem6Button, new Point(22, 27));

            Playback.Wait(500);

            // Click '.' button
            Mouse.Click(uIItemButton3, new Point(20, 18));

            // Click '5' button
            Mouse.Click(uIItem5Button, new Point(13, 14));

            Playback.Wait(500);

            // Click '=' button
            Mouse.Click(uIItemButton1, new Point(27, 18));

            // Click 'Clear' button
            Mouse.Click(uIClearButton, new Point(138, 8));

            Playback.Wait(500);

            // Type '{NumPad7}{Add}{NumPad5}{Enter}{Multiply}{NumPad3}{Enter}{Add}{NumPad5}{Enter}{Back}' in 'Calculator' window
            Keyboard.SendKeys(uICalculatorWindow1, this.FirstTestParams.UICalculatorWindow1SendKeys, ModifierKeys.None);

            Playback.Wait(500);

            // Click '2' button
            Mouse.Click(uIItem2Button, new Point(28, 26));

            Playback.Wait(500);

            // Click '/' button
            Mouse.Click(uIItemButton5, new Point(35, 29));

            Playback.Wait(500);

            // Click '0' button
            Mouse.Click(uIItem0Button, new Point(74, 17));

            Playback.Wait(500);

            // Click '=' button
            Mouse.Click(uIItemButton1, new Point(23, 21));

            Playback.Wait(500);

            // Click 'Clear' button
            Mouse.Click(uIClearButton, new Point(156, 18));

            Playback.Wait(500);

            // Click 'Cerrar' button
            Mouse.Click(uICerrarButton, new Point(18, 10));
        }
        
        #region Properties
        public virtual FirstTestParams FirstTestParams
        {
            get
            {
                if ((this.mFirstTestParams == null))
                {
                    this.mFirstTestParams = new FirstTestParams();
                }
                return this.mFirstTestParams;
            }
        }
        
        public UICalculatorWindow UICalculatorWindow
        {
            get
            {
                if ((this.mUICalculatorWindow == null))
                {
                    this.mUICalculatorWindow = new UICalculatorWindow();
                }
                return this.mUICalculatorWindow;
            }
        }
        
        public UICalculatorWindow1 UICalculatorWindow1
        {
            get
            {
                if ((this.mUICalculatorWindow1 == null))
                {
                    this.mUICalculatorWindow1 = new UICalculatorWindow1();
                }
                return this.mUICalculatorWindow1;
            }
        }
        #endregion
        
        #region Fields
        private FirstTestParams mFirstTestParams;
        
        private UICalculatorWindow mUICalculatorWindow;
        
        private UICalculatorWindow1 mUICalculatorWindow1;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'FirstTest'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FirstTestParams
    {
        
        #region Fields
        /// <summary>
        /// Type '{NumPad7}{Add}{NumPad5}{Enter}{Multiply}{NumPad3}{Enter}{Add}{NumPad5}{Enter}{Back}' in 'Calculator' window
        /// </summary>
        public string UICalculatorWindow1SendKeys = "{NumPad7}{Add}{NumPad5}{Enter}{Multiply}{NumPad3}{Enter}{Add}{NumPad5}{Enter}{Bac" +
            "k}";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UICalculatorWindow : WpfWindow
    {
        
        public UICalculatorWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "Calculator";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public WpfButton UIItem8Button
        {
            get
            {
                if ((this.mUIItem8Button == null))
                {
                    this.mUIItem8Button = new WpfButton(this);
                    #region Search Criteria
                    this.mUIItem8Button.SearchProperties[WpfButton.PropertyNames.AutomationId] = "b8_Buttom";
                    this.mUIItem8Button.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIItem8Button;
            }
        }
        
        public WpfButton UIItemButton
        {
            get
            {
                if ((this.mUIItemButton == null))
                {
                    this.mUIItemButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIItemButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "Plus_Buttom";
                    this.mUIItemButton.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIItemButton;
            }
        }
        
        public WpfButton UIItem5Button
        {
            get
            {
                if ((this.mUIItem5Button == null))
                {
                    this.mUIItem5Button = new WpfButton(this);
                    #region Search Criteria
                    this.mUIItem5Button.SearchProperties[WpfButton.PropertyNames.AutomationId] = "b5_Buttom";
                    this.mUIItem5Button.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIItem5Button;
            }
        }
        
        public WpfButton UIItemButton1
        {
            get
            {
                if ((this.mUIItemButton1 == null))
                {
                    this.mUIItemButton1 = new WpfButton(this);
                    #region Search Criteria
                    this.mUIItemButton1.SearchProperties[WpfButton.PropertyNames.AutomationId] = "Eq_Buttom";
                    this.mUIItemButton1.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIItemButton1;
            }
        }
        
        public WpfButton UIItemButton2
        {
            get
            {
                if ((this.mUIItemButton2 == null))
                {
                    this.mUIItemButton2 = new WpfButton(this);
                    #region Search Criteria
                    this.mUIItemButton2.SearchProperties[WpfButton.PropertyNames.AutomationId] = "Minus_Buttom";
                    this.mUIItemButton2.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIItemButton2;
            }
        }
        
        public WpfButton UIItem6Button
        {
            get
            {
                if ((this.mUIItem6Button == null))
                {
                    this.mUIItem6Button = new WpfButton(this);
                    #region Search Criteria
                    this.mUIItem6Button.SearchProperties[WpfButton.PropertyNames.AutomationId] = "b6_Buttom";
                    this.mUIItem6Button.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIItem6Button;
            }
        }
        
        public WpfButton UIClearButton
        {
            get
            {
                if ((this.mUIClearButton == null))
                {
                    this.mUIClearButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIClearButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "clear";
                    this.mUIClearButton.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIClearButton;
            }
        }
        
        public WpfButton UIItem2Button
        {
            get
            {
                if ((this.mUIItem2Button == null))
                {
                    this.mUIItem2Button = new WpfButton(this);
                    #region Search Criteria
                    this.mUIItem2Button.SearchProperties[WpfButton.PropertyNames.AutomationId] = "b2_Buttom";
                    this.mUIItem2Button.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIItem2Button;
            }
        }
        
        public WpfButton UIItemButton3
        {
            get
            {
                if ((this.mUIItemButton3 == null))
                {
                    this.mUIItemButton3 = new WpfButton(this);
                    #region Search Criteria
                    this.mUIItemButton3.SearchProperties[WpfButton.PropertyNames.AutomationId] = "dot_Buttom";
                    this.mUIItemButton3.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIItemButton3;
            }
        }
        
        public WpfButton UIItem3Button
        {
            get
            {
                if ((this.mUIItem3Button == null))
                {
                    this.mUIItem3Button = new WpfButton(this);
                    #region Search Criteria
                    this.mUIItem3Button.SearchProperties[WpfButton.PropertyNames.AutomationId] = "b3_Buttom";
                    this.mUIItem3Button.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIItem3Button;
            }
        }
        
        public WpfButton UIItemButton4
        {
            get
            {
                if ((this.mUIItemButton4 == null))
                {
                    this.mUIItemButton4 = new WpfButton(this);
                    #region Search Criteria
                    this.mUIItemButton4.SearchProperties[WpfButton.PropertyNames.AutomationId] = "Mult_Buttom";
                    this.mUIItemButton4.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIItemButton4;
            }
        }
        
        public WpfButton UIItemButton5
        {
            get
            {
                if ((this.mUIItemButton5 == null))
                {
                    this.mUIItemButton5 = new WpfButton(this);
                    #region Search Criteria
                    this.mUIItemButton5.SearchProperties[WpfButton.PropertyNames.AutomationId] = "Div_Buttom";
                    this.mUIItemButton5.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIItemButton5;
            }
        }
        
        public WpfButton UIItem0Button
        {
            get
            {
                if ((this.mUIItem0Button == null))
                {
                    this.mUIItem0Button = new WpfButton(this);
                    #region Search Criteria
                    this.mUIItem0Button.SearchProperties[WpfButton.PropertyNames.AutomationId] = "b0_Buttom";
                    this.mUIItem0Button.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIItem0Button;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mUIItem8Button;
        
        private WpfButton mUIItemButton;
        
        private WpfButton mUIItem5Button;
        
        private WpfButton mUIItemButton1;
        
        private WpfButton mUIItemButton2;
        
        private WpfButton mUIItem6Button;
        
        private WpfButton mUIClearButton;
        
        private WpfButton mUIItem2Button;
        
        private WpfButton mUIItemButton3;
        
        private WpfButton mUIItem3Button;
        
        private WpfButton mUIItemButton4;
        
        private WpfButton mUIItemButton5;
        
        private WpfButton mUIItem0Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UICalculatorWindow1 : WinWindow
    {
        
        public UICalculatorWindow1()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Calculator";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public WinButton UICerrarButton
        {
            get
            {
                if ((this.mUICerrarButton == null))
                {
                    this.mUICerrarButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICerrarButton.SearchProperties[WinButton.PropertyNames.Name] = "Cerrar";
                    this.mUICerrarButton.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUICerrarButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICerrarButton;
        #endregion
    }
}
